---
import { APP_BLOG } from 'astrowind:config';
import type { Post } from '~/types';
import Image from '~/components/common/Image.astro';
import { findImage } from '~/utils/images';
import { getPermalink } from '~/utils/permalinks';
import { Icon } from 'astro-icon/components';

export interface Props {
  posts: Array<Post>;
}

const { posts } = Astro.props;

// Simple alternating pattern - Purple, Pink, Purple, Pink, etc.
const cardGradients = [
  'from-primary via-primary/90 to-secondary',    // Purple
  'from-accent via-accent/90 to-primary',        // Pink
];
---

<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
  {
    posts.map(async (post, index) => {
      const image = await findImage(post.image);
      const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';

      return (
        <article class="group">
          {link ? (
            <a href={link} class="block h-full">
              <div class={`relative bg-gradient-to-br ${cardGradients[index % cardGradients.length]} rounded-3xl overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-500 flex flex-col hover:scale-[1.02] h-full`}>

                {/* Post Image */}
                {image && (
                  <div class="relative h-48 overflow-hidden">
                    <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent z-10"></div>
                    <Image
                      src={image}
                      alt={post.title}
                      class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                      widths={[400, 768]}
                      sizes="(max-width: 768px) 100vw, 50vw"
                      loading="lazy"
                      decoding="async"
                    />

                    {/* Category Badge */}
                    {post.category && (
                      <div class="absolute top-4 left-4 z-20">
                        <span class="inline-flex items-center px-3 py-1.5 rounded-full text-xs font-semibold bg-white/20 text-white backdrop-blur-md border border-white/30">
                          {post.category.title}
                        </span>
                      </div>
                    )}
                  </div>
                )}

                {/* Content Section */}
                <div class="p-8 flex flex-col flex-grow">
                  {/* Post Title */}
                  <h3 class="text-2xl font-bold text-white mb-3 leading-tight">
                    {post.title}
                  </h3>

                  {/* Excerpt - Fixed 3 lines */}
                  <p class="text-white/90 leading-relaxed mb-6 text-base line-clamp-3">
                    {post.excerpt}
                  </p>

                  {/* Tags */}
                  {post.tags && post.tags.length > 0 && (
                    <div class="flex flex-wrap gap-2 mb-6">
                      {post.tags.slice(0, 3).map((tag) => (
                        <span class="inline-flex items-center px-3 py-1.5 rounded-full text-xs font-semibold bg-white/15 text-white backdrop-blur-sm border border-white/25">
                          {tag.title}
                        </span>
                      ))}
                    </div>
                  )}

                  {/* Spacer to push content to bottom */}
                  <div class="flex-grow"></div>

                  {/* Read More Button */}
                  <div class="flex items-center text-white font-semibold mb-4">
                    <span class="mr-2">Read More</span>
                    <Icon name="tabler:arrow-right" class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1" />
                  </div>

                  {/* Reading Time & Date */}
                  <div class="pt-4 border-t border-white/20">
                    <span class="text-white/70 text-sm flex items-center gap-2 font-medium">
                      <Icon name="tabler:calendar" class="w-4 h-4" />
                      {new Date(post.publishDate).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric'
                      })}
                      {post.readingTime && (
                        <>
                          <span class="mx-1">â€¢</span>
                          {post.readingTime} min read
                        </>
                      )}
                    </span>
                  </div>
                </div>

                {/* Enhanced hover overlay */}
                <div class="absolute inset-0 bg-white/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none rounded-3xl"></div>
              </div>
            </a>
          ) : (
            <div class={`relative bg-gradient-to-br ${cardGradients[index % cardGradients.length]} rounded-3xl overflow-hidden shadow-xl h-full flex flex-col`}>
              {/* Same content but without link wrapper */}
            </div>
          )}
        </article>
      );
    })
  }
</div>
