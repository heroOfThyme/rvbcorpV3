---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';

import type { Hero as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,

  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),

  id,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<section class="relative min-h-screen flex items-center justify-center overflow-hidden" {...id ? { id } : {}}>
  <!-- Background -->
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true">
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : null}
    </slot>
    <!-- Subtle gradient background for tech feel -->
    <div class="absolute inset-0 bg-gradient-to-br from-primary/20 to-accent/20"></div>
  </div>

  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 py-20">
    <div class="text-center space-y-8">
      <!-- Tagline -->
      {
        tagline && (
          <div class="flex items-center justify-center gap-2 text-primary dark:text-primary">
            <span class="text-lg font-mono">|</span>
            <p class="text-sm font-medium tracking-wide uppercase font-mono">{tagline}</p>
          </div>
        )
      }

      <!-- Main Title -->
      {
        title && (
          <h1 class="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-bold leading-tight tracking-tight font-heading max-w-5xl mx-auto">
            <Fragment set:html={title} />
          </h1>
        )
      }

      <!-- Subtitle -->
      {
        subtitle && (
          <div class="max-w-3xl mx-auto">
            <p class="text-lg sm:text-xl md:text-2xl text-muted dark:text-slate-300 leading-relaxed">
              <Fragment set:html={subtitle} />
            </p>
          </div>
        )
      }

      <!-- CTAs -->
      {
        actions && (
          <div class="flex flex-col sm:flex-row gap-4 justify-center items-center max-w-md mx-auto sm:max-w-none">
            {Array.isArray(actions) ? (
              actions.map((action, index) => (
                <Button
                  {...(action || {})}
                  class={`w-full sm:w-auto px-8 py-4 text-lg font-semibold transition-all duration-300 ${
                    index === 0
                      ? 'bg-primary hover:bg-secondary text-white shadow-lg hover:shadow-xl hover:scale-105'
                      : 'bg-transparent border-2 border-primary/30 hover:border-primary text-primary hover:bg-primary/10'
                  }`}
                />
              ))
            ) : (
              <Fragment set:html={actions} />
            )}
          </div>
        )
      }

      <!-- Additional content -->
      {
        content && (
          <div class="max-w-2xl mx-auto">
            <Fragment set:html={content} />
          </div>
        )
      }
    </div>

    <!-- Hero Image/Visual -->
    {
      image && (
        <div class="mt-16 flex justify-center">
          <div class="relative max-w-4xl w-full">
            {typeof image === 'string' ? (
              <Fragment set:html={image} />
            ) : (
              <Image
                class="w-full h-auto rounded-2xl"
                widths={[400, 768, 1024, 1536]}
                sizes="(max-width: 768px) 400px, (max-width: 1024px) 768px, (max-width: 1536px) 1024px, 1536px"
                loading="eager"
                {...image}
              />
            )}
          </div>
        </div>
      )
    }
  </div>

  <!-- Scroll indicator -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2">
    <div class="w-6 h-10 border-2 border-primary/30 rounded-full flex justify-center">
      <div class="w-1 h-3 bg-primary rounded-full mt-2 animate-bounce"></div>
    </div>
  </div>
</section>
