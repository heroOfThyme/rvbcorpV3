---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<CallToAction>;
  hasAnnouncement?: boolean;
}

const {
  id = 'header',
  links = [],
  actions = [],
  hasAnnouncement = false,
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<!-- Modern Floating Pill Header -->
<header 
  class={`fixed left-1/2 transform -translate-x-1/2 z-50 w-full max-w-4xl px-4 ${hasAnnouncement ? 'top-16' : 'top-4'}`}
  {...id ? { id } : {}}
>
  <!-- Pill Container -->
  <div class="bg-white/10 backdrop-blur-xl border border-[var(--aw-color-primary-30)] rounded-full px-6 py-3 shadow-lg shadow-[var(--aw-color-primary-10)]">
    <div class="flex items-center justify-between">
      
      <!-- Logo -->
      <div class="flex items-center">
        <a class="flex items-center" href={getHomePermalink()}>
          <Logo />
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-8">
        {links.map(({ text, href, links }) => (
          <div class="relative group">
            {links?.length ? (
              <div>
                <button
                  type="button"
                  class="flex items-center text-white/90 hover:text-white transition-colors duration-200 font-medium text-sm"
                >
                  {text}
                  <Icon name="tabler:chevron-down" class="w-4 h-4 ml-1 transition-transform group-hover:rotate-180" />
                </button>
                
                <!-- Dropdown Menu -->
                <div class="absolute top-full left-0 mt-2 w-48 bg-white/10 backdrop-blur-xl border border-[var(--aw-color-primary-30)] rounded-2xl shadow-xl shadow-[var(--aw-color-primary-10)] opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200">
                  <div class="py-2">
                    {links.map(({ text: text2, href: href2 }) => (
                      <a
                        href={href2}
                        class="block px-4 py-2 text-white/80 hover:text-white hover:bg-white/10 transition-colors duration-200 text-sm"
                      >
                        {text2}
                      </a>
                    ))}
                  </div>
                </div>
              </div>
            ) : (
              <a
                href={href}
                class={`text-white/90 hover:text-white transition-colors duration-200 font-medium text-sm ${
                  href === currentPath ? 'text-primary' : ''
                }`}
              >
                {text}
              </a>
            )}
          </div>
        ))}
      </nav>

      <!-- Actions -->
      <div class="hidden md:flex items-center space-x-3">
        {actions.map((action, index) => (
          <Button
            {...action}
            class={`px-4 py-2 text-sm font-medium rounded-full transition-all duration-200 ${
              index === 0 
                ? 'bg-primary hover:bg-primary/90 text-white' 
                : 'bg-white/10 hover:bg-white/20 text-white border border-[var(--aw-color-primary-30)]'
            }`}
          />
        ))}
      </div>

      <!-- Mobile Menu Toggle -->
      <div class="md:hidden">
        <ToggleMenu class="flex items-center justify-center w-8 h-8" />
      </div>
    </div>

    <!-- Mobile Navigation - Floating Dropdown -->
    <div class="md:hidden absolute top-full left-0 right-0 mt-2 mx-4 hidden" id="mobile-menu">
      <div class="bg-white/10 backdrop-blur-xl border border-[var(--aw-color-primary-30)] rounded-2xl shadow-xl shadow-[var(--aw-color-primary-10)] px-4 py-4">
        <div class="space-y-3">
          {links.map(({ text, href, links }) => (
            <div>
              {links?.length ? (
                <div>
                  <button
                    type="button"
                    class="w-full text-left flex items-center justify-between text-white/90 hover:text-white py-2 text-sm font-medium"
                    onclick="toggleMobileDropdown(this)"
                  >
                    {text}
                    <Icon name="tabler:chevron-down" class="w-4 h-4 transition-transform" />
                  </button>
                  <div class="pl-4 space-y-1 hidden">
                    {links.map(({ text: text2, href: href2 }) => (
                      <a
                        href={href2}
                        class="block text-white/70 hover:text-white py-1 text-sm"
                      >
                        {text2}
                      </a>
                    ))}
                  </div>
                </div>
              ) : (
                <a
                  href={href}
                  class={`block text-white/90 hover:text-white py-2 text-sm font-medium ${
                    href === currentPath ? 'text-primary' : ''
                  }`}
                >
                  {text}
                </a>
              )}
            </div>
          ))}
          
          <!-- Mobile Actions -->
          {actions.length > 0 && (
            <div class="pt-3 border-t border-white/20 space-y-2">
              {actions.map((action, index) => (
                <Button
                  {...action}
                  class={`w-full px-4 py-2 text-sm font-medium rounded-full transition-all duration-200 ${
                    index === 0 
                      ? 'bg-primary hover:bg-primary/90 text-white' 
                      : 'bg-white/10 hover:bg-white/20 text-white border border-[var(--aw-color-primary-30)]'
                  }`}
                />
              ))}
            </div>
          )}
        </div>
      </div>
    </div>
  </div>
</header>

<!-- Updated Scripts for Mobile Menu -->
<script is:inline>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', function() {
    const toggleButtons = document.querySelectorAll('[data-aw-toggle-menu]');
    const mobileMenu = document.getElementById('mobile-menu');
    
    toggleButtons.forEach(button => {
      button.addEventListener('click', function() {
        if (mobileMenu) {
          mobileMenu.classList.toggle('hidden');
        }
      });
    });
  });

  // Mobile dropdown toggle
  function toggleMobileDropdown(button) {
    const dropdown = button.nextElementSibling;
    const icon = button.querySelector('svg');
    
    dropdown.classList.toggle('hidden');
    icon.classList.toggle('rotate-180');
  }
</script>