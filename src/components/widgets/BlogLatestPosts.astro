---
import { APP_BLOG } from 'astrowind:config';
import { getBlogPermalink } from '~/utils/permalinks';
import { findLatestPosts } from '~/utils/blog';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';
import { findImage } from '~/utils/images';
import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate } from '~/utils/utils';
import type { Widget } from '~/types';

export interface Props extends Widget {
  title?: string;
  subtitle?: string;
  tagline?: string;
  linkText?: string;
  linkUrl?: string | URL;
  count?: number;
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  linkText = 'View all posts',
  linkUrl = getBlogPermalink(),
  count = 3,
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

const posts = APP_BLOG.isEnabled ? await findLatestPosts({ count }) : [];

// More prominent gradient combinations - similar intensity to your project cards but with purple
const blogGradients = [
  'from-primary/30 via-primary/10 to-accent/20',
  'from-accent/30 via-accent/10 to-primary/20', 
  'from-secondary/30 via-secondary/10 to-primary/20',
];
---

{
  APP_BLOG.isEnabled ? (
    <WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
      <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 items-stretch">
        {posts.slice(0, 3).map(async (post, index) => {
          const image = await findImage(post.image);
          const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
          
          return (
            <article class="group h-full">
              <div class={`relative bg-gradient-to-br ${blogGradients[index % blogGradients.length]} rounded-2xl overflow-hidden border border-white/5 backdrop-blur-sm transition-all duration-300 h-full flex flex-col hover:border-primary/20`}>
                
                <!-- Blog Image -->
                {image && (
                  <div class="relative h-48 overflow-hidden">
                    {link ? (
                      <a href={link} class="block h-full">
                        <Image
                          src={image}
                          class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                          widths={[400, 600]}
                          width={400}
                          sizes="(max-width: 768px) 100vw, 33vw"
                          alt={post.title}
                          aspectRatio="16:9"
                          loading="lazy"
                          decoding="async"
                        />
                      </a>
                    ) : (
                      <Image
                        src={image}
                        class="w-full h-full object-cover"
                        widths={[400, 600]}
                        width={400}
                        sizes="(max-width: 768px) 100vw, 33vw"
                        alt={post.title}
                        aspectRatio="16:9"
                        loading="lazy"
                        decoding="async"
                      />
                    )}
                    
                    <!-- Date Badge -->
                    <div class="absolute top-3 left-3">
                      <span class="inline-flex items-center px-2 py-1 rounded-lg text-xs font-medium bg-white/90 text-gray-800 backdrop-blur-sm">
                        {getFormattedDate(post.publishDate)}
                      </span>
                    </div>
                  </div>
                )}

                <!-- Content Section -->
                <div class="p-6 flex-1 flex flex-col min-h-[200px]">
                  <!-- Category -->
                  {post.category && (
                    <div class="mb-2">
                      <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium text-primary bg-primary/10">
                        {post.category.title}
                      </span>
                    </div>
                  )}
                  
                  <!-- Title -->
                  <h3 class="text-lg font-bold text-white mb-3 leading-tight flex-1">
                    {link ? (
                      <a href={link} class="hover:text-primary transition-colors duration-300">
                        {post.title}
                      </a>
                    ) : (
                      post.title
                    )}
                  </h3>
                  
                  <!-- Excerpt -->
                  {post.excerpt && (
                    <p class="text-white/70 text-sm leading-relaxed mb-4 line-clamp-3">
                      {post.excerpt}
                    </p>
                  )}

                  <!-- Read More Button -->
                  {link && (
                    <Button
                      href={link}
                      variant="secondary"
                      class="mt-auto self-start text-sm px-4 py-2 rounded-lg"
                    >
                      Read More â†’
                    </Button>
                  )}
                </div>

                <!-- Subtle hover overlay -->
                <div class="absolute inset-0 bg-gradient-to-br from-primary/2 via-transparent to-accent/2 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none rounded-2xl"></div>
              </div>
            </article>
          );
        })}
      </div>

      <!-- View All Posts Button -->
      {APP_BLOG.list.isEnabled && linkText && linkUrl && (
        <div class="text-center mt-8">
          <Button variant="primary" href={linkUrl} class="px-8 py-3">
            {linkText}
          </Button>
        </div>
      )}
    </WidgetWrapper>
  ) : (
    <Fragment />
  )
}