---
import { APP_BLOG } from 'rvbcorp:config';
import { getBlogPermalink } from '~/utils/permalinks';
import { findLatestPosts } from '~/utils/blog';
import Headline from '~/components/ui/Headline.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';
import { findImage } from '~/utils/images';
import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate } from '~/utils/utils';
import type { Widget } from '~/types';

export interface Props extends Widget {
  title?: string;
  subtitle?: string;
  tagline?: string;
  linkText?: string;
  linkUrl?: string | URL;
  count?: number;
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  linkText = 'View all posts',
  linkUrl = getBlogPermalink(),
  count = 3,
  id,
  classes = {},
} = Astro.props;

const posts = APP_BLOG.isEnabled ? await findLatestPosts({ count }) : [];

// Simple alternating pattern - Purple, Pink, Purple, Pink, etc.
const blogGradients = [
  'from-primary via-primary/90 to-secondary',    // Purple
  'from-accent via-accent/90 to-primary',        // Pink
];
---

{
  APP_BLOG.isEnabled ? (
    <section class="relative py-16 md:py-20" {...id ? { id } : {}}>
      <div class="max-w-6xl mx-auto px-4 sm:px-6">
        <Headline
          title={title}
          subtitle={subtitle}
          tagline={tagline}
          classes={{
            ...classes?.headline as Record<string, string>,
            title: 'text-3xl md:text-4xl'
          }}
        />

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8 md:mt-12">
        {posts.slice(0, 3).map(async (post, index) => {
          const image = await findImage(post.image);
          const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';

          return (
            <article class="group h-full">
              <div class={`relative bg-gradient-to-br ${blogGradients[index % blogGradients.length]} rounded-3xl overflow-hidden transition-all duration-500 h-full flex flex-col shadow-xl hover:shadow-2xl hover:scale-[1.02]`}>

                <!-- Blog Image with gradient overlay -->
                {image && (
                  <div class="relative h-48 overflow-hidden">
                    <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent z-10"></div>
                    {link ? (
                      <a href={link} class="block h-full">
                        <Image
                          src={image}
                          class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                          widths={[400, 600]}
                          sizes="(max-width: 768px) 100vw, 33vw"
                          alt={post.title}
                          loading="lazy"
                          decoding="async"
                        />
                      </a>
                    ) : (
                      <Image
                        src={image}
                        class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                        widths={[400, 600]}
                        sizes="(max-width: 768px) 100vw, 50vw"
                        alt={post.title}
                        loading="lazy"
                        decoding="async"
                      />
                    )}
                  </div>
                )}

                <!-- Content Section -->
                <div class="p-6 flex-1 flex flex-col">
                  <!-- Date & Read Time -->
                  <div class="flex items-center justify-between mb-3 flex-shrink-0">
                    <span class="inline-flex items-center px-3 py-1.5 rounded-full text-xs font-semibold bg-white/20 text-white backdrop-blur-md border border-white/30">
                      {getFormattedDate(post.publishDate)}
                    </span>
                    {post.readingTime && (
                      <span class="inline-flex items-center px-3 py-1.5 rounded-full text-xs font-semibold text-white backdrop-blur-md">
                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        {post.readingTime} min
                      </span>
                    )}
                  </div>

                  <!-- Title -->
                  <h3 class="text-xl font-bold text-white mb-3 leading-tight flex-shrink-0">
                    {link ? (
                      <a href={link} class="hover:text-white/80 transition-colors duration-300">
                        {post.title}
                      </a>
                    ) : (
                      post.title
                    )}
                  </h3>

                  <!-- Excerpt -->
                  {post.excerpt && (
                    <p class="text-white text-sm leading-relaxed mb-4 flex-grow flex-shrink-0">
                      {post.excerpt}
                    </p>
                  )}

                  <!-- Category at bottom -->
                  {post.category && (
                    <div class="mb-4 flex-shrink-0">
                      <span class="inline-flex items-center px-3 py-1.5 rounded-full text-xs font-semibold bg-white/15 text-white backdrop-blur-sm border border-white/25">
                        {post.category.title}
                      </span>
                    </div>
                  )}

                  <!-- Read More Button -->
                  {link && (
                    <div class="flex-shrink-0">
                      <Button
                        href={link}
                        class="btn-service w-full block"
                      >
                        Read More â†’
                      </Button>
                    </div>
                  )}
                </div>

                <!-- Enhanced hover overlay -->
                <div class="absolute inset-0 bg-white/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none rounded-3xl"></div>
              </div>
            </article>
          );
        })}
        </div>

        <!-- View All Posts Button -->
        {APP_BLOG.list.isEnabled && linkText && linkUrl && (
          <div class="text-center mt-8">
            <Button variant="primary" href={linkUrl} class="px-8 py-3">
              {linkText}
            </Button>
          </div>
        )}
      </div>
    </section>
  ) : (
    <Fragment />
  )
}