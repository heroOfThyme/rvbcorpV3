---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import { Icon } from 'astro-icon/components';

const {
  title = '',
  subtitle = '',
  tagline = '',
  items = [],
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

// Simple alternating pattern - Purple, Pink, Purple, Pink, etc.
const cardGradients = [
  'from-primary via-primary/90 to-secondary',    // Purple
  'from-accent via-accent/90 to-primary',        // Pink
];
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
    {
      items.map((item, index) => (
        <div
          class={`bg-gradient-to-br ${cardGradients[index % cardGradients.length]} rounded-2xl p-6 hover:scale-[1.02] transition-all duration-300`}
        >
          {item.icon && (
            <div class="w-12 h-12 bg-white/15 backdrop-blur-sm rounded-xl flex items-center justify-center mb-4 border border-white/20">
              <Icon name={item.icon} class="w-6 h-6 text-white" />
            </div>
          )}

          {item.title && <h3 class="text-xl font-bold text-white mb-3">{item.title}</h3>}

          {item.description && <p class="text-white/90 leading-relaxed">{item.description}</p>}
        </div>
      ))
    }
  </div>
</WidgetWrapper>
